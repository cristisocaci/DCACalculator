@page "/investmentplans/create"
@using DCACalculator.Models
@using DCACalculator.Services
@using Microsoft.EntityFrameworkCore
@using DCACalculator.Entities
@inject DCAContext context
@inject NavigationManager NavigationManager
@inject DCAInvestmentPlanService dcaService

<PageTitle>Create</PageTitle>

<h1>Create Investment Plans</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="InvestmentPlan"  FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label d-block">Investments:</label>
                @foreach(var investment in Investments)
                {
                    <div class="d-flex flex-row gap-3 mb-3">
                        <InputSelect @bind-Value="investment.Symbol" class="form-control">
                            @foreach(var opt in AvailableCoins)
                            {
                                <option value="@opt">@opt</option>
                            }
                        </InputSelect>
                        <InputNumber @bind-Value="investment.AmountEur" class="form-control" />
                    </div>
                }
                <button class="btn btn-primary" @onclick="AddInvestment">Add</button>
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="InvestmentPlan.Name" class="form-control" /> 
                <ValidationMessage For="() => InvestmentPlan.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="startdate" class="form-label">Start Date:</label> 
                <InputDate id="startdate" @bind-Value="InvestmentPlan.StartDate" class="form-control"/> 
                <ValidationMessage For="() => InvestmentPlan.StartDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="enddate" class="form-label">End Date:</label> 
                <InputDate id="enddate" @bind-Value="InvestmentPlan.EndDate" class="form-control" /> 
                <ValidationMessage For="() => InvestmentPlan.EndDate" class="text-danger" /> 
            </div>             
            <button type="submit" class="btn btn-primary" @onclick="AddInvestmentPlan">Create</button>
        </EditForm>

    </div>
</div>

@code {
    private InvestmentPlan InvestmentPlan { get; set; } = new() 
    { 
        Name = "", 
        StartDate = DateOnly.FromDateTime(DateTime.Now), 
        EndDate = DateOnly.FromDateTime(DateTime.Now)
    };

    private List<Investment> Investments = [];

    private List<string> AvailableCoins = [];


    protected override async Task OnInitializedAsync()
    {
        AvailableCoins = await context.AvailableCoins.Select(x => x.Symbol).ToListAsync();
        Investments.Add(new()
        {
            Symbol = ""
        });
        await base.OnInitializedAsync();
    }

    private async Task AddInvestmentPlan()
    {
        await dcaService.SimulateInvestmentPlanResults(InvestmentPlan, Investments);
        NavigationManager.NavigateTo("/investmentplans");
    }

    private void AddInvestment()
    {
        Investments.Add(new()
        {
            Symbol = ""
        });
    }
}
